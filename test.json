{
  "name": "Fixed Email to Excel Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "path": "trigger-email-read",
        "responseMode": "onReceived",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "postProcessAction": "read",
        "simple": false,
        "options": {
          "allowUnauthorizedCerts": false,
          "attachments": false,
          "downloadAttachments": false
        }
      },
      "id": "read-email-node",
      "name": "Read Email",
      "type": "n8n-nodes-base.imapEmail",
      "typeVersion": 2,
      "position": [
        460,
        300
      ],
      "credentials": {
        "imap": {
          "id": "email-credentials",
          "name": "Email IMAP Credentials"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extract and format email fields\nconst extractedEmails = [];\n\nfor (const item of $input.all()) {\n  const email = item.json;\n  \n  // Extract key fields from email\n  const extractedData = {\n    'Email Date': email.date ? new Date(email.date).toLocaleDateString() : 'Unknown',\n    'Email Time': email.date ? new Date(email.date).toLocaleTimeString() : 'Unknown',\n    'From Address': email.from?.text || email.from || 'Unknown Sender',\n    'To Address': email.to?.text || email.to || 'Unknown Recipient',\n    'Subject': email.subject || 'No Subject',\n    'Body Preview': email.text ? email.text.substring(0, 200).replace(/[\\r\\n]+/g, ' ').trim() : 'No Content',\n    'Has Attachments': (email.attachments && email.attachments.length > 0) ? 'Yes' : 'No',\n    'Message ID': email.messageId || 'Unknown',\n    'Read Status': (email.flags && email.flags.includes('\\\\Seen')) ? 'Read' : 'Unread',\n    'Email Size': email.size || 0\n  };\n  \n  extractedEmails.push(extractedData);\n}\n\n// Return formatted data\nreturn extractedEmails.map(email => ({ json: email }));"
      },
      "id": "extract-fields-node",
      "name": "Extract Fields",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "operation": "toFile",
        "fileFormat": "xlsx",
        "options": {
          "fileName": "Email_Export_{{ $now.format('yyyy-MM-dd_HH-mm-ss') }}.xlsx",
          "sheetName": "Email Data",
          "headerRow": true
        }
      },
      "id": "save-excel-node",
      "name": "Save to Excel",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 2,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "binary",
        "options": {
          "mimeType": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        }
      },
      "id": "download-response-node",
      "name": "Download File",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1120,
        300
      ]
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Read Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Email": {
      "main": [
        [
          {
            "node": "Extract Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Fields": {
      "main": [
        [
          {
            "node": "Save to Excel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Excel": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "workflow-version-1",
  "meta": {
    "templateCredsSetupCompleted": false
  },
  "id": "email-to-excel-workflow",
  "tags": []
}
